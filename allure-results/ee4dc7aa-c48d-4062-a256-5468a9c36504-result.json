{"uuid":"ee4dc7aa-c48d-4062-a256-5468a9c36504","historyId":"47ed20ed055317b53ca58de609e69908","fullName":"com.httprunnerjava.HttpRunner.testStart","labels":[{"name":"package","value":"com.httprunnerjava.postman_echo.functionalVerification.PostValidate"},{"name":"testClass","value":"com.httprunnerjava.postman_echo.functionalVerification.PostValidate"},{"name":"testMethod","value":"testStart"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"httprunner_for_java_form_cc"},{"name":"subSuite","value":"com.httprunnerjava.postman_echo.functionalVerification.PostValidate"},{"name":"host","value":"LAPTOP-RCRIUKE5"},{"name":"thread","value":"19708@LAPTOP-RCRIUKE5.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"testStart","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[{"name":"step: post form data using json 1","status":"passed","stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1650426335078,"stop":1650426335078}],"attachments":[],"parameters":[{"name":"arg1","value":"null"},{"name":"arg0","value":"name           : post form data using json 1\nrequest        : TRequest(method=POST, url=/post, params=Params(content={}), headers={\n    Content-Type:application/json\n\n}, reqJson=ReqJson(mapObj=null, listObj=null, strObj=LazyContent(rawValue=$jsondata), type=3), data=null, timeout=null, allowRedirects=false, verify=false, upload=null)\nvariables      : Variables(content={foo2=LazyContent(rawValue=bar23), jsondata=LazyContent(rawValue=[LazyContent(rawValue={LazyContent(rawValue=key2)=LazyContent(rawValue=value2), LazyContent(rawValue=key1)=LazyContent(rawValue=value1)}), LazyContent(rawValue={LazyContent(rawValue=key11)=LazyContent(rawValue=value11), LazyContent(rawValue=key22)=LazyContent(rawValue=value22)}), LazyContent(rawValue={LazyContent(rawValue=key111)=LazyContent(rawValue=value111), LazyContent(rawValue=key222)=LazyContent(rawValue=value222)})])})\nsetupHooks     : Hooks(content=[])\nteardownHooks  : Hooks(content=[])\nextract        : {}\nexport         : Export(content=[])\nvalidators     : [Validator(checkItem=status_code, expectValue=200, message=null, comparator=equals), Validator(checkItem=body.json, expectValue=[{'key1':'value1','key2':'value2'},{'key11':'value11','key22':'value22'},{'key111':'value111','key222':'value222'}], message=null, comparator=listContains)]\n"}],"start":1650426335078,"stop":1650426336309}